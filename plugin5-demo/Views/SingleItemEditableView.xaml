<UserControl x:Class="plugin5_demo.Views.SingleItemEditableView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:fluent="clr-namespace:Fluent;assembly=Fluent"    
             xmlns:awr="clr-namespace:Aliquo.Windows.Properties;assembly=Aliquo.Windows"        
             xmlns:awcs="clr-namespace:Aliquo.Windows.Controls;assembly=Aliquo.Windows.Controls" 
             xmlns:aw="clr-namespace:Aliquo.Windows;assembly=Aliquo.Windows"        
             xmlns:awc="clr-namespace:Aliquo.Windows.Controls;assembly=Aliquo.Windows.Controls"  
             xmlns:interactivity="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:plugin5_demo.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Aliquo.Windows;Component/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Aliquo.Windows;Component/Themes/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Aliquo.Windows.Controls;Component/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Aliquo.Windows.Controls;Component/Themes/SfDataGridControlStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <aw:AnyBooleanToVisibilityMultiConverter x:Key="AnyTrueToVisible" />
            <aw:AddInputKeyToStringConverter x:Key="AddInputKey" />
            <aw:NothingToVisibilityConverter IsReversed="true" x:Key="NothingToCollapsed" />
            <aw:NothingToBooleanConverter IsReversed="true" x:Key="NothingToFalse" />
            <aw:BooleanToVisibilityConverter IsReversed="true" x:Key="BooleanToVisibilityConverter"></aw:BooleanToVisibilityConverter>
            <aw:BooleanToVisibilityConverter x:Key="ReversedBooleanToVisibilityConverter"></aw:BooleanToVisibilityConverter>
            <aw:DateTimeUtcToDateTimeTimeZone x:Key="DateTimeUtcToDateTimeTimeZone"></aw:DateTimeUtcToDateTimeTimeZone>
            <aw:InverseBooleanConverter x:Key="InverseBooleanConverter"></aw:InverseBooleanConverter>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <!-- Pestaña general -->
        <KeyBinding Key="M" Modifiers="Control" Command="{Binding ViewCommand}" CommandParameter="modify" />
        <KeyBinding Key="Delete" Modifiers="Control" Command="{Binding ViewCommand}" CommandParameter="delete" />
        <KeyBinding Key="D" Modifiers="Control" Command="{Binding ViewCommand}" CommandParameter="duplicate" />
        <KeyBinding Key="F5" Command="{Binding ViewCommand}" CommandParameter="refresh" />

        <!-- Pestaña edición -->
        <KeyBinding Key="F12" Modifiers="Control" Command="{Binding ViewCommand}" CommandParameter="accept_edition" />
        <KeyBinding Key="Escape" Modifiers="Shift" Command="{Binding ViewCommand}" CommandParameter="cancel_edition" />
    </UserControl.InputBindings>
    <UserControl.ToolTip>
        <StackPanel x:Name="ToolTipTable" Orientation="Vertical" >
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding DescriptionTable}" />
                <TextBlock Text="{Binding InfoStatus, StringFormat='({0})'}" Margin="4,0,0,0" Visibility="{Binding InfoStatus, Converter={StaticResource NothingToCollapsed}}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,4,0,0">
                <TextBlock Text="{Binding InfoDataCode, StringFormat='[{0}]'}" FontWeight="Normal" Margin="0,0,4,0" Visibility="{Binding InfoDataCode, Converter={StaticResource NothingToCollapsed}}" />
                <TextBlock Text="{Binding InfoDataDescription}" FontWeight="Normal" Visibility="{Binding InfoDataDescription, Converter={StaticResource NothingToCollapsed}}" />
            </StackPanel>
        </StackPanel>
    </UserControl.ToolTip>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <fluent:Ribbon Grid.Row="0" Name="RibbonDetail" SelectedTabIndex="1">
            <fluent:RibbonTabItem Header="{x:Static awr:Resources.Edition}" 
                                  Visibility="{Binding IsEditMode, Converter={StaticResource ReversedBooleanToVisibilityConverter}}">
                <fluent:RibbonGroupBox>
                    <fluent:Button Header="{x:Static awr:Resources.Accept}" 
                                   Command="{Binding ViewCommand}"
                                   CommandParameter="accept_edition"
                                   LargeIcon="/Aliquo.Windows;component/Images/accept_large.png" 
                                   Size="Large"
                                   ToolTip="{Binding Header, ConverterParameter='Ctrl+F12', Converter={StaticResource AddInputKey}, RelativeSource={RelativeSource Self}}" />
                    <fluent:Button Header="{x:Static awr:Resources.Cancel}" 
                                   Command="{Binding ViewCommand}"
                                   CommandParameter="cancel_edition"
                                   LargeIcon="/Aliquo.Windows;component/Images/close_large.png" 
                                   Size="Large"
                                   ToolTip="{Binding Header, ConverterParameter='Shift+Escape', Converter={StaticResource AddInputKey}, RelativeSource={RelativeSource Self}}" />
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            <fluent:RibbonTabItem Header="{x:Static awr:Resources.General}"
                                  Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                                  ReduceOrder="groupPrint, groupPrint, groupPrint, groupVarious, groupVarious, groupVarious, groupQuickActions, groupQuickActions, groupQuickActions" >

                <fluent:RibbonGroupBox>
                    <fluent:Button Header="{x:Static awr:Resources.Add}" Command="{Binding ViewCommand}" CommandParameter="add" 
                                   Icon="/Aliquo.Windows;component/Images/add.png" Size="Middle"
                                   ToolTip="{Binding Header, RelativeSource={RelativeSource Self}, Converter={StaticResource AddInputKey}, ConverterParameter='Ctrl+N'}" />

                    <fluent:Button Header="{x:Static awr:Resources.Modify}" Command="{Binding ViewCommand}" CommandParameter="modify" 
                                   Icon="/Aliquo.Windows;component/Images/edit.png" Size="Middle"
                                   ToolTip="{Binding Header, RelativeSource={RelativeSource Self}, Converter={StaticResource AddInputKey}, ConverterParameter='Ctrl+M'}" />

                    <fluent:Button Header="{x:Static awr:Resources.Delete}" Command="{Binding ViewCommand}" CommandParameter="delete" 
                                   Icon="/Aliquo.Windows;component/Images/delete.png" Size="Middle"
                                   ToolTip="{Binding Header, RelativeSource={RelativeSource Self}, Converter={StaticResource AddInputKey}, ConverterParameter='Ctrl+Delete'}" />

                    <fluent:Button Header="{x:Static awr:Resources.Duplicate}" Command="{Binding ViewCommand}" CommandParameter="duplicate" 
                                   Icon="/Aliquo.Windows;component/Images/duplicate.png" Size="Middle"
                                   ToolTip="{Binding Header, RelativeSource={RelativeSource Self}, Converter={StaticResource AddInputKey}, ConverterParameter='Ctrl+D'}" />

                    <fluent:Button Header="{x:Static awr:Resources.Refresh}" Command="{Binding ViewCommand}" CommandParameter="refresh"
                                   Icon="/Aliquo.Windows;component/Images/refresh.png" Size="Middle"
                                   ToolTip="{Binding Header, RelativeSource={RelativeSource Self}, Converter={StaticResource AddInputKey}, ConverterParameter='F5'}" />

                </fluent:RibbonGroupBox>

            </fluent:RibbonTabItem>

        </fluent:Ribbon>
        <HeaderedContentControl Grid.Row="1" Header="Artículo" ></HeaderedContentControl>
        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="10,10,10,10" VerticalAlignment="Center">
            <TextBlock Margin="0,2,20,0" FontWeight="Bold">Código</TextBlock>
            <awc:TextBoxValidation 
                                Width="115"
                                awcs:SuggestionKeyUpTextBox.Key="Down"
                                awcs:SuggestionKeyUpTextBox.ProviderAsync="{Binding NotificationCodeSuggestionProvider}"
                                IsReadOnly="{Binding IsEditMode, Converter={StaticResource InverseBooleanConverter}}"
                                Required="True"                                
                                Text="{Binding Product.Codigo}">
            </awc:TextBoxValidation>
            <TextBlock Margin="30,2,20,0">Nombre</TextBlock>
            <awc:TextBoxValidation    
                                Width="500" 
                                IsReadOnly="{Binding IsEditMode, Converter={StaticResource InverseBooleanConverter}}"
                                Required="True"                                
                                Text="{Binding Product.Nombre}">
            </awc:TextBoxValidation>
        </StackPanel>

        <HeaderedContentControl Grid.Row="3" Header="Datos generales" Margin="0,20,0,0"></HeaderedContentControl>
        <StackPanel Grid.Row="4" Orientation="Horizontal" Margin="10,0,0,0">
            <Grid Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120"></ColumnDefinition>
                    <ColumnDefinition Width="16*"></ColumnDefinition>
                    <ColumnDefinition Width="311*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Familia"></TextBlock>
                <awc:TextBoxValidation       
                                Grid.Row="0" Grid.Column="1" 
                                Margin="0,0,0,5"
                                Width="100"
                                LocationScreen="{Binding Location, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"                                                                                       
                                Text="{Binding Product.CodFamilia}"                                               
                                LinkButtonCommand="{Binding ViewCommand}"
                                LinkButtonCommandParameter="family_selection"
                                LinkButtonVisible="True">
                    <awc:TextBoxValidation.Style>
                        <Style TargetType="awc:TextBoxValidation">
                            <Setter Property="IsReadOnly" Value="False" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEditMode}" Value="false">
                                    <Setter Property="IsReadOnly" Value="True"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </awc:TextBoxValidation.Style>
                    <interactivity:Interaction.Behaviors>
                        <awc:EventToMethodBehavior  EventName="LostFocus"
                                                        Method="CodFamilyLostFocusEventHandlerAsync"                                                        
                                                        Arg1="{awc:EventArgsSource PropertyPath=Source.Text}"
                                                        />
                    </interactivity:Interaction.Behaviors>
                </awc:TextBoxValidation>
                <awc:TextBoxValidation IsReadOnly="True" 
                                    Width="537"
                                    Margin="5,0,0,5"
                                    Grid.Column="2" Grid.Row="0"
                                    Text="{Binding Product.NombreFamilia}"></awc:TextBoxValidation>

                <TextBlock Text="Subfamilia"  Grid.Row="1" Grid.Column="0"></TextBlock>
                <awc:TextBoxValidation                               
                                Width="100"
                                Grid.Row="1" Grid.Column="1" 
                                Margin="5,0,5,5"
                                LocationScreen="{Binding Location, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"                                                                                       
                                Text="{Binding Product.CodSubFamilia}"                                               
                                LinkButtonCommand="{Binding ViewCommand}"
                                LinkButtonCommandParameter="subfamily_selection"
                                LinkButtonVisible="True">
                    <awc:TextBoxValidation.Style>
                        <Style TargetType="awc:TextBoxValidation">
                            <Setter Property="IsReadOnly" Value="False" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEditMode}" Value="false">
                                    <Setter Property="IsReadOnly" Value="True"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </awc:TextBoxValidation.Style>
                    <interactivity:Interaction.Behaviors>
                        <awc:EventToMethodBehavior  EventName="LostFocus"
                                                        Method="CodSubFamilyLostFocusEventHandlerAsync"                                                        
                                                        Arg1="{awc:EventArgsSource PropertyPath=Source.Text}"
                                                        />
                    </interactivity:Interaction.Behaviors>
                </awc:TextBoxValidation>
                <awc:TextBoxValidation IsReadOnly="True" 
                                   Width="537"
                                   Margin="5,0,0,5"                                      
                                   Grid.Column="2" Grid.Row="1"
                                   Text="{Binding Product.NombreSubfamilia}"></awc:TextBoxValidation>

                <TextBlock Text="Impuesto"  Grid.Row="2" Grid.Column="0"></TextBlock>
                <awc:TextBoxValidation                               
                                Width="100"
                                Grid.Row="2" Grid.Column="1" 
                                Margin="5,0,5,5"
                                Required="true"
                                LocationScreen="{Binding Location, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"                                                                                       
                                Text="{Binding Product.CodTipoImpuesto}"                                               
                                LinkButtonCommand="{Binding ViewCommand}"
                                LinkButtonCommandParameter="tax_selection"
                                LinkButtonVisible="True">
                    <awc:TextBoxValidation.Style>
                        <Style TargetType="awc:TextBoxValidation">
                            <Setter Property="IsReadOnly" Value="False" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEditMode}" Value="false">
                                    <Setter Property="IsReadOnly" Value="True"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </awc:TextBoxValidation.Style>
                    <interactivity:Interaction.Behaviors>
                        <awc:EventToMethodBehavior  EventName="LostFocus"
                                                        Method="CodTaxLostFocusEventHandlerAsync"                                                        
                                                        Arg1="{awc:EventArgsSource PropertyPath=Source.Text}"
                                                        />
                    </interactivity:Interaction.Behaviors>
                </awc:TextBoxValidation>
                <awc:TextBoxValidation IsReadOnly="True" 
                                   Width="537"
                                   Margin="5,0,0,5"                                      
                                   Grid.Column="2" Grid.Row="2"
                                   Text="{Binding Product.NombreTipoImpuesto}"></awc:TextBoxValidation>
            </Grid>            
        </StackPanel>
        <StackPanel Grid.Row="5" Orientation="Horizontal" Margin="10,10,10,10" VerticalAlignment="Top">
            <TextBlock Text="P.V.P"></TextBlock>
            <awc:TextBoxValidation Margin="98,0,0,0"
                                   Width="100"
                                   IsReadOnly="{Binding IsEditMode, Converter={StaticResource InverseBooleanConverter}}"
                                   Text="{Binding Product.PrecioVenta}"    
                                   ValidationMode="Decimal"
                                   ></awc:TextBoxValidation>

            <TextBlock Text="Coste" Margin="10,0,0,0"></TextBlock>
            <awc:TextBoxValidation Margin="10,0,0,0"
                                   Width="100"
                                   IsReadOnly="true"
                                   Text="{Binding Product.CosteMedio}"    
                                   ValidationMode="Decimal"
                                   ></awc:TextBoxValidation>
        </StackPanel>

        <fluent:StatusBar Grid.Row="6" x:Name="StatusBarView" >
            <fluent:StatusBarItem HorizontalAlignment="Left" Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel Orientation="Horizontal" >
                    <StackPanel.ToolTip>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="100" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="{x:Static awr:Resources.Info_Create}" FontWeight="Bold" Margin="0,0,0,4" />
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static awr:Resources.CodeId}" />
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding CurrentProductId}" />
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static awr:Resources.Info_User}" />
                            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Product.UsuarioCreacion}" />
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static awr:Resources.Info_Date}" />
                            <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Product.FechaCreacion}" />
                            <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Text="{x:Static awr:Resources.Info_Edit}" FontWeight="Bold" Margin="0,8,0,4" />
                            <TextBlock Grid.Row="5" Grid.Column="0" Text="{x:Static awr:Resources.Info_User}" />
                            <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding Product.UsuarioModificacion}" />
                            <TextBlock Grid.Row="6" Grid.Column="0" Text="{x:Static awr:Resources.Info_Date}" />
                            <TextBlock Grid.Row="6" Grid.Column="1" Text="{Binding Product.FechaModificacion}" />
                        </Grid>
                    </StackPanel.ToolTip>
                    <Path Data="{DynamicResource info_edit}" />
                </StackPanel>
            </fluent:StatusBarItem>

            <fluent:StatusBarItem Visibility="{Binding IsEditMode, Converter={StaticResource ReversedBooleanToVisibilityConverter}}" Margin="4,2,0,0" VerticalAlignment="Top">
                <StackPanel Orientation="Horizontal">
                    <Path Data="{DynamicResource info}" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding InfoStatus}" Margin="5,0,0,0" />
                        <TextBlock Text="{Binding Source={x:Static awr:Resources.Message_KeySuggestion}, StringFormat='{}({0})'}"
                                   Margin="5,0,0,0"
                                   Visibility="{Binding ShowSuggestionInfo, Converter={StaticResource ReversedBooleanToVisibilityConverter}}" />
                        <TextBlock Text="{Binding Source={x:Static awr:Resources.NotificationTasks_ContextInfo}, StringFormat='{}({0})'}"
                                   Margin="5,0,0,0"
                                   Visibility="{Binding ShowContextInfo, Converter={StaticResource ReversedBooleanToVisibilityConverter}}" />
                    </StackPanel>
                </StackPanel>
            </fluent:StatusBarItem>

        </fluent:StatusBar>
    </Grid>
</UserControl>
